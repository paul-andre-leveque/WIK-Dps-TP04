# apiVersion: v1
# kind: Pod
# metadata:
#   name: echoserver
#   namespace: dwidder
# spec:
#   containers:
#   - name: echoserver
#     image: registry.k8s.io/echoserver:1.4
#     ports:
#     - containerPort: 8080

# ---
# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: echoserver
#   labels:
#     app: echo
#     toto: tata
# spec:
#   replicas: 20
#   selector:
#     matchLabels:
#       toto: tutu
#   template:
#     metadata:
#       labels:
#         toto: tutu
#     spec:
#       containers:
#       - name: echoserver
#         image: registry.k8s.io/echoserver:1.4
#         ports:
#         - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo-service
  namespace: default
spec:
  selector:
    toto: tutu
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
  namespace: default
  labels:
    app: echoserver

spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%

  selector:
    matchLabels:
      toto: tutu
  template:
    metadata:
      labels:
        toto: tutu
    spec:

      containers:
      - name: echoserver
        image: registry.k8s.io/echoserver:1.4
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 60m
            memory: 50Mi
          limits:
            cpu: 60m
            memory: 50Mi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echoserver
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: production.amazon.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echo-service
            port:
              number: 3000
